openapi: 3.0.3

info:
  title: "Sample API" # 必須項目
  version: "1.0.0" # 必須項目、作成しているAPIドキュメントのバージョンを記述する

  termsOfService: "https://example.com/terms/" # サービス利用規約のURL

  contact: # 連絡先情報
    name: "Customer Support"
    url: "https://example.com/support"
    email: "support@example.com"

  license: # ライセンス情報の定義
    name: "MIT License"
    url: "https://opensource.org/lisences/MIT"

# 定義しているOpen APIを利用できるサーバーを列挙する
# 環境ごとに記述していく
# Viewerの「Servers」の項目に、プルダウンで並べられる
servers:
  - url: "http://api.example.com/{version}"
    description: "Production Environment" # 上記 url の詳細情報(利用される環境など)
    variables: # 環境上で利用される変数を記述
      version: # URL のパスに含まれるAPIのバージョン番号を指定する
        description: "API version"
        enum: ["v1", "v2"] # version の値がとりうる値
        default: "v2" # 必須

  - url: "http://localhost:{port}"
    description: "Local development"
    variables:
      port:
        enum: ["3000", "8000"]
        default: "3000"

  - url: "https://it1.example.com"
    description: "Integration test"

  - url: "https://staging.example.com"
    description: "Staging environment"

  - url: "https://api-dev.example.com/{version}"
    description: "Develop environment"
    variables:
      varsion:
        description: "API version"
        enum: ["v1", "v2", "v3"]
        default: "v3"

paths:
  "/shops/{shopId}/reviews":
    get: # GET メソッドでのリクエストに対するレスポンスを記述する
      summary: "Get specified shop reviews" # レスポンスの内容について要約を記述する
      description: "(description): Get specified shop reviews" # レスポンスの内容について詳細を記載する
      tags: ["shops"]
      deprecated: false # エンドポイントが廃止されているかどうか
      parameters: # エンドポイントが持つパラメータの定義
        - name: "shopId" # shopId パラメータについての定義
          in: path # パラメータがどこに記載されるかを指定
          required: true # 必須項目かどうか
          schema: { type: string } # 受け取る値のスキーマ(型定義)
      responses:
        "200":
          description: "Success operation"

  "/hello-world": #localhost/hello-world へのアクセス
    get:
      summary: "Sample API initial test"
      description: 'return string "Hello world from Sample API!!" '
      responses:
        200:
          description: "Success operation"
          content:
            application/json:
              schema:
                type: "string"
                example: "Hello world from Sample API!!"
